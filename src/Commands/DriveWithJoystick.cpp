// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "DriveWithJoystick.h"

DriveWithJoystick::DriveWithJoystick() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drivetrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void DriveWithJoystick::Initialize() {
	Robot::drivetrain->Stop();
}

// Called repeatedly when this Command is scheduled to run
void DriveWithJoystick::Execute() {
	Joystick * joy = Robot::oi->getDriveJoystick();
	double throtv = 1.0-((joy->GetThrottle()+1.0)/2.0);
	Joystick * joyr = Robot::oi->getGrabJoystick();
	double throtr = 1.0-((joyr->GetThrottle()+1.0)/2.0);
#if 0
	if(joy->GetButton(3))
	{
		Robot::drivetrain->DriveWithInputs(0, joy->GetY()*throtv, joy->GetTwist()*throtr);
	}
	else if(joy->GetButton(4))
		{
			Robot::drivetrain->DriveWithInputs(joy->GetX()*throtv, 0, joy->GetTwist()*throtr);
		}
#endif

	Robot::drivetrain->DriveWithInputs(joy->GetX()*throtv, joy->GetY()*throtv, joy->GetTwist()*throtr);
}

// Make this return true when this Command no longer needs to run execute()
bool DriveWithJoystick::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void DriveWithJoystick::End() {
	Robot::drivetrain->Stop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveWithJoystick::Interrupted() {
	Robot::drivetrain->Stop();
}
