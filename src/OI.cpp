// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveWithJoystick.h"
#include "Commands/GrabBox.h"
#include "Commands/MoveBoxPulleyCommand.h"
#include "Commands/MoveCanPulley.h"
#include "Commands/ReleaseBox.h"
#include "Commands/SetNoUseGyro.h"
#include "Commands/SetUseGyro.h"
#include "Commands/ToggleUseGyro.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	grabJoystick = new Joystick(1);
	
	moveCanPulleyButton = new JoystickButton(grabJoystick, 2);
	moveCanPulleyButton->WhileHeld(new MoveCanPulley());
	moveBoxPulley = new JoystickButton(grabJoystick, 1);
	moveBoxPulley->WhileHeld(new MoveBoxPulleyCommand());
	releaseBoxButton = new JoystickButton(grabJoystick, 5);
	releaseBoxButton->WhenPressed(new ReleaseBox());
	grabBoxButton = new JoystickButton(grabJoystick, 4);
	grabBoxButton->WhileHeld(new GrabBox());
	driveJoystick = new Joystick(0);
	
	toggleRelative = new JoystickButton(driveJoystick, 7);
	toggleRelative->WhenPressed(new ToggleUseGyro());
	drive = new JoystickButton(driveJoystick, 1);
	drive->WhileHeld(new DriveWithJoystick());
     

        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

	SmartDashboard::PutData("DriveWithJoystick", new DriveWithJoystick());

	SmartDashboard::PutData("SetNoUseGyro", new SetNoUseGyro());

	SmartDashboard::PutData("SetUseGyro", new SetUseGyro());

	SmartDashboard::PutData("ToggleUseGyro", new ToggleUseGyro());

	SmartDashboard::PutData("ReleaseBox", new ReleaseBox());

	SmartDashboard::PutData("GrabBox", new GrabBox());

	SmartDashboard::PutData("MoveBoxPulleyCommand", new MoveBoxPulleyCommand());

	SmartDashboard::PutData("MoveCanPulley", new MoveCanPulley());


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

Joystick* OI::getGrabJoystick() {
	return grabJoystick;
}

Joystick* OI::getDriveJoystick() {
	return driveJoystick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
